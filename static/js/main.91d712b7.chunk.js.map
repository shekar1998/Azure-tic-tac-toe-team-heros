{"version":3,"sources":["components/cell.js","components/table-cell.js","components/Game.js","components/Timer.js","components/MainGame.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","props","style","color","value","background","val","a","b","c","id","className","onClick","onClickCell","TableCell","scope","Game","Component","handleId","state","cells","next","newNext","setState","count","toggleTimer1","countdownTimer2","toggleTimer2","countdownTimer1","table","document","querySelector","children","console","log","data","player1","player2","innerHTML","calculateWinner","delete","resetTimer","fill","startGame","setInterval","second1","clearInterval","seconds","second2","prob","minutes","showHide","showInput","lines","i","length","status","winner","this","player","map","index","undefined","bind","PlayersName","pl1","pl2","alert","renderInput","placeholder","name","type","onChange","inputChange","event","target","play1","play2","React","MainGame","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91d712b7.chunk.js","sourcesContent":["import React from 'react';\nimport '../index.css'\n\nconst Cell = (props) => {\n    let style={\n        color : props.value ? 'black' : 'transparent',\n        background : 'white'\n    }\n    if(props.val){\n        let [a,b,c]= props.val;\n       if(props.id === a || props.id === b || props.id === c)\n       {\n            style={\n                color : props.value ? 'black' : 'transparent',\n                background : '#9c88ff'\n            }\n       }\n    }\n    \n    let value = props.value || 'X'; \n    return(\n        <button style={style} className=\"cell\" onClick={() => props.onClickCell(props.id)}>{value}</button>\n        );\n};     \n\nexport default Cell;\n","import React, { Component } from 'react';\nimport '../index.css';\nimport '../../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nconst TableCell = () => {\n\n        return (\n      <div className='main-table'>\n        <table className='table table-striped'>\n          <thead>\n            <tr>\n              <th scope='col'>Index</th>\n              <th scope='col'>Player</th>\n              <th scope='col'>CellNo</th>\n            </tr>\n          </thead>\n          <tbody>\n          </tbody>\n        </table>\n      </div>\n    );\n}\n\nexport default TableCell;\n","import React, { Component } from 'react';\nimport Cell from './cell';\nimport Table from './table-cell';\nimport Timer from './Timer';\nimport '../index.css';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      next: 'O',\n      cells: [null, null, null, null, null, null, null, null, null],\n      count: 0,\n      prob: [],\n      second1: 0,\n      minutes: 0,\n      second2: 0,\n      showHide: false,\n      showInput: true,\n    };\n  }\n\n  handleId = (id) => {\n    let currentvalue = this.state.cells[id];\n    if (currentvalue) {\n      return;\n    }\n    this.state.cells[id] = this.state.next;\n    let newNext = this.state.next === 'O' ? 'X' : 'O';\n    this.setState({\n      next: newNext,\n      count: (this.state.count += 1),\n    });\n\n    if(this.state.next === 'O')\n    {\n      this.toggleTimer1();\n      this.countdownTimer2();\n    }\n    else{\n      this.toggleTimer2();\n      this.countdownTimer1();\n    }\n    const table = document.querySelector('Table').children[1];\n    console.log(table);\n    const data = `<tr>\n              <th scope=\"row\">${this.state.count}</th>\n              <th>${this.state.next === 'O' ? this.props.player1 : this.props.player2}</th>\n              <th>${id}</th>\n              </tr>`;\n    table.innerHTML += data;\n    if (this.calculateWinner(this.state.cells) || this.state.cells[id]) {\n      return;\n    }\n  };\n\n  calculateWinner(state) {\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ];\n    for (let i = 0; i < lines.length; i++) {\n      const [a, b, c] = lines[i];\n      if (state[a] && state[a] === state[b] && state[a] === state[c]) {\n        return {\n          cells: state[a],\n          prob: lines[i],\n        };\n      }\n    }\n    return null;\n  }\n\n  delete = () => {\n    const table = document.querySelector('Table').children[1];\n    const status = document.querySelector('.status');\n    status.innerHTML = '';\n\n\n    table.innerHTML = '';\n    this.resetTimer();\n    this.toggleTimer1();\n    this.toggleTimer2();\n    this.setState({\n      count: 0,\n      cells: this.state.cells.fill(null),\n    });\n  };\n\n  startGame = () => {\n    console.log('this');\n    this.countdownTimer1();\n  };\n\n  // componentDidMount() {\n  //   this.countdownTimer1();\n  //   this.countdownTimer2();\n  // }\n  countdownTimer1 = () => {\n    this.id = setInterval(() => {\n      if (this.state.second1 > 60) {\n        clearInterval(this.id);\n        return;\n      }\n      this.setState({\n        seconds: this.state.second1 += 1,\n      });\n      console.log(this.state.second1);\n    }, 1000);\n  };\n\n  countdownTimer2 = () => {\n    this.id = setInterval(() => {\n      if (this.state.second2 > 60) {\n        clearInterval(this.id);\n        return;\n      }\n      this.setState({\n        seconds: this.state.second2 += 1,\n\n      });\n      console.log(this.state.second2);\n    }, 1000);\n  };\n\n  toggleTimer1 = () => {\n    if (this.id) {\n      clearInterval(this.id);\n    }\n  };\n\n  toggleTimer2 = () => {\n    if (this.id) {\n      clearInterval(this.id);\n      // this.id = null;\n    } \n  };\n\n  resetTimer = () => {\n    this.setState({\n      second1: 0,\n      second2: 0\n    });\n  };\n\n  render() {\n    const status = document.querySelector('.status');\n    const winner = this.calculateWinner(this.state.cells);\n    if (winner) {\n      status.innerHTML = `Winner: ${winner.cells === 'O' ? this.props.player1 : this.props.player2}`;\n      this.toggleTimer1();\n      this.toggleTimer2();\n    }\n    if (this.state.count == 9) {\n      status.innerHTML = 'The Match Is a Draw';\n    }\n    return (\n      <div className='main'>\n        <header>\n          <p className='tic'>Tic-Tac-Toe</p>\n          <p className='status'></p>\n        </header>\n        <p className='tictac'></p>\n        <div></div>\n        <div className='board'>\n          <div>\n            <div className='timertoggle timer1'>\n              <p>{this.props.player}</p>\n              <h3>\n                {this.state.minutes} : {this.state.second1}\n              </h3>\n              <button className='btn btn-secondary' onClick={this.toggleTimer1}>\n                {this.props.player1}\n              </button>\n            </div>\n            <div className='timertoggle timer2'>\n              <p>{this.props.player}</p>\n              <h3>\n                {this.state.minutes} : {this.state.second2}\n              </h3>\n              <button className='btn btn-secondary' onClick={this.toggleTimer2}>\n                {this.props.player2}\n              </button>\n            </div>\n          </div>\n\n          {this.state.cells.map((\n            val,\n            index //val--null, index--0\n          ) => (\n            <Cell\n              className='buttoncell'\n              id={index}\n              val={winner ? winner.prob : undefined}\n              value={val}\n              onClickCell={this.handleId}\n              key={index}\n              count={this.state.count}\n            />\n          ))}\n          <button className='btn btn1 btn-secondary' onClick={this.delete.bind(this)}>\n            Play Again!\n          </button>\n          <button className='btn resetbutton btn-secondary' onClick={this.countdownTimer1}>\n            Start\n          </button>\n        </div>\n        <Table />\n      </div>\n    );\n  }\n}\nexport default Game;\n","import React, { Component } from \"react\";\n\nclass Timer extends Component {\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            second : 0, \n            minutes : 0,\n        };\n    }\n\n    countdownTimer =() => {\n        this.id = setInterval(() => {\n            if(this.state.second > 60)\n            {\n                clearInterval(this.id);\n                return;\n            }\n            this.setState({\n                seconds : this.state.seconds + 1,\n            })\n            \n        },1000)\n    };\n\n    toggleTimer = () => {\n        if(this.id)\n        {\n            clearInterval(this.id);\n            this.id = null ;\n        }else{\n            this.countdownTimer();\n        }\n    };\n\n    resetTimer = () => {\n        this.setState({\n            seconds : 0\n        })\n    }\n\n    componentDidMount() \n    {\n        this.countdownTimer();\n    }\n\n    render() {\n        return(\n            <div className=\"timertoggle\" >\n                <h3>\n                    {this.state.minutes} : {this.state.seconds}\n                </h3>\n                <button className=\"btn btn-secondary\" onClick = {this.resetTimer}>Reset</button>\n                <button className=\"btn btn-secondary\" onClick = {this.toggleTimer}>Toggle</button>\n            </div>\n        )\n    }\n\n}\n\nexport default Timer;","import React from 'react'\nimport Game from './Game'\nimport '../index.css'\n\nclass PlayersName extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n           showHide:  false,\n            showInput : true\n       };  \n        this.inputChange = this.inputChange.bind(this);\n        this.startGame = this.startGame.bind(this);\n        \n       }\n\n    inputChange(event){\n        this.setState({\n          [event.target.name] :event.target.value\n        });\n    }\n    startGame=(state)=>{\n            console.log(this.state);\n            console.log(state)\n            \n            if(this.state.pl1 && this.state.pl2){\n                this.setState({\n                    showInput : false\n                })\n            }else{\n                alert('Put the names');\n            }  \n        }\nrenderInput=()=>{\nreturn(\n\n    <div>\n    <input className=\"form-control\" placeholder=\"player 1 Name\" name='pl1' type='text' value= {this.state.pl1} onChange={this.inputChange}></input>\n    <input className=\"form-control\" placeholder=\"player 1 Name\" name='pl2' type='text' value={this.state.pl2} onChange={this.inputChange}></input>\n    <button className=\"btn btn-secondary\" onClick={() => this.startGame(this.state.showHide)}>Start</button>\n\n    </div>\n)\n}\n\n render(){\n   if(this.state.showInput === true)\n   {\n      return this.renderInput()\n   }else{\n       return <Game  player2={this.state.pl2} player1={this.state.pl1}  play1={this.state.pl1} play2={this.state.pl2} />\n   }\n}\n}\nexport default PlayersName","import React, { Component } from 'react'\nimport MainGame from './components/MainGame';\nimport './App.css';\n\n\nexport default () => <MainGame /> \n\n// export default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App' \nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}